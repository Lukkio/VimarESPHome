esphome:
  name: salotto
  friendly_name: Cucina
  includes: 
#    - my_custom_sensor.h
    - Vimar_climate.h
    - UART_Vimar.h

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "******"

ota:
  password: "*********"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Salotto Fallback Hotspot"
    password: "yc3A1o22nKMk"

captive_portal:

#sensor:
#- platform: custom
#  lambda: |-
#    auto my_sensor = new MyCustomSensor();
#    App.register_component(my_sensor);
#    return {my_sensor};

#  sensors:
#    name: "My Custom Sensor"


uart:
  id: uart_bus
  tx_pin: GPIO5
  rx_pin: GPIO4
  baud_rate: 9600

sensor:
- platform: custom
  lambda: |-
    auto my_custom = new MyCustomComponent(id(uart_bus));
    App.register_component(my_custom);
    return {my_custom->temperature_sensor, my_custom->temperature_setted, my_custom->VimarHeatCold, my_custom->VimarOnOff};
  sensors:
  - id: VimarActualTemp
  - id: VimarTempSetted
  - id: VimarHeatCold
  - id: VimarOnOff
  


climate:
- platform: custom
  lambda: |-
    auto my_custom_climate = new VimarClimate();
    my_custom_climate->set_sensor(id(VimarActualTemp)); // Optional
    my_custom_climate->set_sensor2(id(VimarTempSetted)); // Optional
    my_custom_climate->set_sensor3(id(VimarHeatCold)); // Optional
    my_custom_climate->set_sensor4(id(VimarOnOff)); // Optional
    my_custom_climate->set_UARTDevice(id(uart_bus)); // Optional
    App.register_component(my_custom_climate);
    return {my_custom_climate};

  climates:
    - name: "1"

      
interval:
  - interval: 10sec
    then:
      - uart.write: "Read8"
    